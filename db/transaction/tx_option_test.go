package transaction

import (
	"encoding/json"
	"testing"

	"github.com/33cn/chain33/common"
	"github.com/33cn/chain33/types"
	"github.com/stretchr/testify/assert"
	"github.com/33cn/externaldb/util"

	_ "github.com/33cn/chain33/system"
	_ "github.com/33cn/plugin/plugin/dapp/init"
	_ "github.com/33cn/plugin/plugin/store/init"
)

// Other options
type Other struct {
	A int    `json:"a"`
	S string `json:"s"`
}

func Test_interfaceOption(t *testing.T) {
	tx := &Transaction{
		Block: &Block{
			Height: 1,
		},
		Index:   1,
		Success: true,
		Options: &Other{
			A: 1,
			S: "ss",
		},
	}
	e := `{"height_index":0,"height":1,"block_time":0,"block_hash":"","success":true,"index":1,"hash":"","from":"","to":"","execer":"","amount":0,"fee":0,"action_name":"","group_count":0,"is_withdraw":false,"options":{"a":1,"s":"ss"},"assets":null,"next":"","is_para":false}`
	v, _ := json.Marshal(tx)
	assert.Equal(t, e, string(v))
}

func Test_None(t *testing.T) {
	blockByte := "0aa107122041122145b38fd4067307ea81f0db35688086b82b950d10e5fb1a5f0fdbdbfef51a20aaee8018a2ad1483f1b1f84f48403234da83105092051007a8daa0cfb7393c8722203efae25ad32dfdac2e53d6924405c42b338dd59701dca05575cb11eb86d50c1328f80330f086c4ea053a99040a067469636b657412ed02501022e80208ffff8bf8011080cab5ee011a70313271796f6361794e46374c7636433971573461767873324537553431664b5366763a3078386434663130653666313762616533636538663764303239616263623461393839616563333333386238386662333537656165663035613265326465373930343a30303030303039303731224230783537656632356366363036613734393462626164326432666233373734316137636332346663663066653064303637363638636564306235653961363735336632209198c346a89114b5db750f73cd12f3728552ac67b041070bc80f9af7354ffd5e3a8101d0d2382eda453f73796890613ae2f3a62168a7dfe35d23d00b7d57cb4faf949fe8dcaf9947a24ab48263e66e57bc69798f1e0d4f290559d976c8f9665231a48b04748dca7eb51d6bec78e3174f3019287571bd93ecfa60cd0bf28a5529f07a718a150a3c02d27e28c8c56a07c760c694c6d98e76db676b8492f5fd03f7115f8d7d1a6d080112210320bbac09528e19c55b0f89cb37ab265e7e856b1a8c388780322dbbfd194b52ba1a4630440220133b699a791b64ce7a398acecf43900518df51c711595852c53554ab7921a1f0022049d18f269154b631d1ed705e63900a27ab6a5eadc4a8636af068d84912b2036b20a08d0630c1a3b7d7c188ceda483a22313668747663424e53454137665a6841644c4a706844775152514a614870794854703ae8010a05746f6b656e123838062a340a054142434445100a2205746f6b656e2a22313268704a4248796268316d537943696a51324d514a506b377a376b5a376a6e51611a6d08011221021afd97c3d9a47f7ead3ca34fe5a73789714318df2c608cf2c7962378dc858ecb1a46304402200f86140b3289880a9c9b2c26e73f2820f46c4c81357051131eb66b1d48bacc1502200ac0a943d9ddd3f160dddbe624097765a444ce071dcf1fe92ea1ac91f34deadf20a08d0628e687c4ea0530d8d7daadaceac5a70e3a22313268704a4248796268316d537943696a51324d514a506b377a376b5a376a6e516158ffff8bf80162203bf370dd7568f63caa261cc341cc321b81b6417df0bbe8ac7afb691abef27d6568f80312e80508021a5e0802125a0a2b10a0d0b1c9ef192222313271796f6361794e46374c7636433971573461767873324537553431664b536676122b1080c3abc9ef192222313271796f6361794e46374c7636433971573461767873324537553431664b5366761a9f010871129a010a70313271796f6361794e46374c7636433971573461767873324537553431664b5366763a3078386434663130653666313762616533636538663764303239616263623461393839616563333333386238386662333537656165663035613265326465373930343a30303030303039303731100218012222313271796f6361794e46374c7636433971573461767873324537553431664b5366761a620805125e0a2d1080d0d3eaa2a7ca342222313668747663424e53454137665a6841644c4a706844775152514a61487079485470122d10809a89d9a4a7ca342222313668747663424e53454137665a6841644c4a706844775152514a614870794854701a870108081282010a22313668747663424e53454137665a6841644c4a706844775152514a61487079485470122d1880c6eedba2e68611222231344b454b6259744b4b516d34774d7468534b394a344c61346e41696964476f7a741a2d188090a4caa4e68611222231344b454b6259744b4b516d34774d7468534b394a344c61346e41696964476f7a741a620805125e0a2d10809a89d9a4a7ca342222313668747663424e53454137665a6841644c4a706844775152514a61487079485470122d1080e08fe8a5a7ca342222313668747663424e53454137665a6841644c4a706844775152514a614870794854701a8f010808128a010a22313668747663424e53454137665a6841644c4a706844775152514a6148707948547012311080e0ba84bf031880aaa28e732222314251585336547861595947356d41446157696a344178685a5a55547077393561351a311080e0ba84bf031880f0a89d742222314251585336547861595947356d41446157696a344178685a5a5554707739356135128c0308021a5c080212580a2a1080ca93c321222231513868474c666f47653633656665576138664a34506e756b686b6e677436706f4b122a10e0bc8dc321222231513868474c666f47653633656665576138664a34506e756b686b6e677436706f4b1a76080712720a22313268704a4248796268316d537943696a51324d514a506b377a376b5a376a6e51611226100a222231513868474c666f47653633656665576138664a34506e756b686b6e677436706f4b1a24222231513868474c666f47653633656665576138664a34506e756b686b6e677436706f4b1a520803124e0a26100a2222313268704a4248796268316d537943696a51324d514a506b377a376b5a376a6e516112242222313268704a4248796268316d537943696a51324d514a506b377a376b5a376a6e51611a5e0803125a0a2b10f6bbf0e6f002222231513868474c666f47653633656665576138664a34506e756b686b6e677436706f4b122b1080bcf0e6f002222231513868474c666f47653633656665576138664a34506e756b686b6e677436706f4b"
	index := int64(1)
	env, err := util.GenEnv(blockByte, index)
	assert.Nil(t, err)
	env.Block.Block.Txs[1].Execer = []byte("none")
	env.Block.Receipts[1].Ty = types.ExecPack

	tx := ConvertTransaction(env)
	assert.True(t, tx.Success)

	env.Block.Block.Txs[1].Execer = []byte("ticket")
	env.Block.Receipts[1].Ty = types.ExecPack
	tx = ConvertTransaction(env)
	assert.False(t, tx.Success)

	util.InitChain33("user.p.sto.", "", "")
	coinTranfer := "0x0a0e757365722e702e612e636f696e73123418010a301080988be499031a03626262222231336e69787a5a4e53424168507a4b636d574d336e6b59316d4b5157684c4b69446420a08d0630a2b6c8d8fef6e1d82c3a2231486a686837665538566e444a615a31624a696947386f7268476d4c504532647a50"
	bs, err := common.FromHex(coinTranfer)
	assert.Nil(t, err)
	var paraTx types.Transaction
	err = types.Decode(bs, &paraTx)
	assert.Nil(t, err)
	env.Block.Block.Txs[1] = &paraTx
	env.Block.Block.Txs[1].Execer = []byte("user.p.sto.coins")
	env.Block.Block.Txs[1].To = "exec-address"
	tx = ConvertTransaction(env)
	assert.NotEqual(t, "exec-address", tx.To)
}
